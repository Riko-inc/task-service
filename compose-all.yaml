services:
  task-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - redis
      - kafka
    healthcheck:
      test: "curl --fail --silent localhost:8082/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 20s

  auth-service:
    build:
      context: ../auth-service
      dockerfile: ../auth-service/Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - postgres
      - redis
      - kafka
    healthcheck:
      test: "curl --fail --silent localhost:8083/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 20s

  file-service:
    build:
      context: ../file-service
      dockerfile: ../file-service/Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - postgres
      - redis
      - kafka
    healthcheck:
      test: "curl --fail --silent localhost:8084/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 20s
  space-service:
    build:
      context: ../space-service
      dockerfile: ../space-service/Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      - postgres
    healthcheck:
      test: "curl --fail --silent localhost:8085/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 20s
  kafka:
    image: 'bitnami/kafka:3.8'
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_SUPER_USERS=User:sa
      # Listeners
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:29092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
        # Отключаем ACL для тестирования
#      - KAFKA_CFG_ALLOW_EVERYONE_IF_NO_ACL_FOUND=true
#      - KAFKA_CFG_SUPER_USERS=User:sa
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    ports:
      - "29092:29092"
      - "29095:9404"
    restart: always
    healthcheck:
      test: "bash -c 'printf \"\" > /dev/tcp/127.0.0.1/9092; exit $$?;'"
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 30s

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      # CLUSTER SETTINGS
      - KAFKA_CLUSTERS_0_NAME=abcdefghijklmnopqrstuv
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - DYNAMIC_CONFIG_ENABLED=true
      # AUTH
      - AUTH_TYPE=LOGIN_FORM
      - SPRING_SECURITY_USER_NAME=admin
      - SPRING_SECURITY_USER_PASSWORD=admin
    ports:
      - "8089:8080"
    restart: always
    depends_on:
      - kafka
    healthcheck:
      test: wget --no-verbose --tries=1 --spider localhost:8089 || exit 1
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 5s

  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - '5425:5432'
    expose:
      - '5425'

  redis:
    image: 'redis:latest'
    ports:
      - '6379:6379'
